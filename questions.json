[
    {
        "question": "When you click the paragraph, what's the logged output?",
        "code": "<div onclick=\"console.log('div')\">\n  <p onclick=\"console.log('p')\">\n    Click here!\n  </p>\n</div>",
        "answers": ["p div", "div p", "p", "div"],
        "answer": 0,
        "explanation": "If we click p, we see two logs: p and div. During event propagation, there are 3 phases: capturing, target, and bubbling. By default, event handlers are executed in the bubbling phase (unless you set useCapture to true). It goes from the deepest nested element outwards."
    },
    {
        "question": " What's the output?",
        "code": "const user = { name: \"Lydia\", age: 21 };\nconst admin = { admin: true, ...user };\n\nconsole.log(admin);",
        "answers": ["{ admin: true, user: { name: \"Lydia\", age: 21 } }", "{ admin: true, name: \"Lydia\", age: 21 }", "{ admin: true, user: [\"Lydia\", 21] }", "{ admin: true }"],
        "answer": 1,
        "explanation": "It's possible to combine objects using the spread operator .... It lets you create copies of the key/value pairs of one object, and add them to another object. In this case, we create copies of the user object, and add them to the admin object. The admin object now contains the copied key/value pairs, which results in { admin: true, name: \"Lydia\", age: 21 }."
    }
]
